import t from"isomorphic-unfetch";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},e.apply(this,arguments)}class r{constructor(t){this.authToken=void 0,this.baseUrl=void 0,this.authToken=t.authToken,this.baseUrl="https://the-one-api.dev/v2"}request(r,o){const s=`${this.baseUrl}${r}`,i=e({},o,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.authToken}`}});return t(s,i).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)})}}class o extends r{getMovies(){return this.request("/movie")}getMovie(t){return this.request(`/movie${t}`)}getMovieQuote(t){return this.request(`/movie/${t}/quote`)}}class s{constructor(t){this.movie=void 0,this.movie=new o(t)}}export{s as MovieLib};
